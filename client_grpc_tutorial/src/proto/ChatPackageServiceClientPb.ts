/**
 * @fileoverview gRPC-Web generated client stub for chatPackage
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: proto/chatPackage.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from 'grpc-web';

import * as proto_chatPackage_pb from '../proto/chatPackage_pb';

export class ChatServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(
    hostname: string,
    credentials?: null | { [index: string]: string },
    options?: null | { [index: string]: any },
  ) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorChatInitiate = new grpcWeb.MethodDescriptor(
    '/chatPackage.ChatService/ChatInitiate',
    grpcWeb.MethodType.UNARY,
    proto_chatPackage_pb.ChatInitiateRequest,
    proto_chatPackage_pb.ChatInitiateResponse,
    (request: proto_chatPackage_pb.ChatInitiateRequest) => {
      return request.serializeBinary();
    },
    proto_chatPackage_pb.ChatInitiateResponse.deserializeBinary,
  );

  chatInitiate(
    request: proto_chatPackage_pb.ChatInitiateRequest,
    metadata: grpcWeb.Metadata | null,
  ): Promise<proto_chatPackage_pb.ChatInitiateResponse>;

  chatInitiate(
    request: proto_chatPackage_pb.ChatInitiateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: proto_chatPackage_pb.ChatInitiateResponse,
    ) => void,
  ): grpcWeb.ClientReadableStream<proto_chatPackage_pb.ChatInitiateResponse>;

  chatInitiate(
    request: proto_chatPackage_pb.ChatInitiateRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: proto_chatPackage_pb.ChatInitiateResponse,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/chatPackage.ChatService/ChatInitiate',
        request,
        metadata || {},
        this.methodDescriptorChatInitiate,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/chatPackage.ChatService/ChatInitiate',
      request,
      metadata || {},
      this.methodDescriptorChatInitiate,
    );
  }

  methodDescriptorSendMessage = new grpcWeb.MethodDescriptor(
    '/chatPackage.ChatService/SendMessage',
    grpcWeb.MethodType.UNARY,
    proto_chatPackage_pb.SendMessageRequest,
    proto_chatPackage_pb.SendMessageResponse,
    (request: proto_chatPackage_pb.SendMessageRequest) => {
      return request.serializeBinary();
    },
    proto_chatPackage_pb.SendMessageResponse.deserializeBinary,
  );

  sendMessage(
    request: proto_chatPackage_pb.SendMessageRequest,
    metadata: grpcWeb.Metadata | null,
  ): Promise<proto_chatPackage_pb.SendMessageResponse>;

  sendMessage(
    request: proto_chatPackage_pb.SendMessageRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: proto_chatPackage_pb.SendMessageResponse,
    ) => void,
  ): grpcWeb.ClientReadableStream<proto_chatPackage_pb.SendMessageResponse>;

  sendMessage(
    request: proto_chatPackage_pb.SendMessageRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: proto_chatPackage_pb.SendMessageResponse,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/chatPackage.ChatService/SendMessage',
        request,
        metadata || {},
        this.methodDescriptorSendMessage,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/chatPackage.ChatService/SendMessage',
      request,
      metadata || {},
      this.methodDescriptorSendMessage,
    );
  }

  methodDescriptorUserStream = new grpcWeb.MethodDescriptor(
    '/chatPackage.ChatService/UserStream',
    grpcWeb.MethodType.SERVER_STREAMING,
    proto_chatPackage_pb.StreamRequest,
    proto_chatPackage_pb.UserStreamResponse,
    (request: proto_chatPackage_pb.StreamRequest) => {
      return request.serializeBinary();
    },
    proto_chatPackage_pb.UserStreamResponse.deserializeBinary,
  );

  userStream(
    request: proto_chatPackage_pb.StreamRequest,
    metadata?: grpcWeb.Metadata,
  ): grpcWeb.ClientReadableStream<proto_chatPackage_pb.UserStreamResponse> {
    return this.client_.serverStreaming(
      this.hostname_ + '/chatPackage.ChatService/UserStream',
      request,
      metadata || {},
      this.methodDescriptorUserStream,
    );
  }

  methodDescriptorChatStream = new grpcWeb.MethodDescriptor(
    '/chatPackage.ChatService/ChatStream',
    grpcWeb.MethodType.SERVER_STREAMING,
    proto_chatPackage_pb.StreamRequest,
    proto_chatPackage_pb.ChatStreamResponse,
    (request: proto_chatPackage_pb.StreamRequest) => {
      return request.serializeBinary();
    },
    proto_chatPackage_pb.ChatStreamResponse.deserializeBinary,
  );

  chatStream(
    request: proto_chatPackage_pb.StreamRequest,
    metadata?: grpcWeb.Metadata,
  ): grpcWeb.ClientReadableStream<proto_chatPackage_pb.ChatStreamResponse> {
    return this.client_.serverStreaming(
      this.hostname_ + '/chatPackage.ChatService/ChatStream',
      request,
      metadata || {},
      this.methodDescriptorChatStream,
    );
  }
}
